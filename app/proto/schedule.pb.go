// Code generated by protoc-gen-go. DO NOT EDIT.
// source: workspace/jiken-reminder/proto/schedule.proto

package schedule

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// CreateSchedule のリクエスト定義
type CreateScheduleRequest struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Deadline             string   `protobuf:"bytes,2,opt,name=deadline,proto3" json:"deadline,omitempty"`
	Content              string   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateScheduleRequest) Reset()         { *m = CreateScheduleRequest{} }
func (m *CreateScheduleRequest) String() string { return proto.CompactTextString(m) }
func (*CreateScheduleRequest) ProtoMessage()    {}
func (*CreateScheduleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0fffd387de7519c, []int{0}
}

func (m *CreateScheduleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateScheduleRequest.Unmarshal(m, b)
}
func (m *CreateScheduleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateScheduleRequest.Marshal(b, m, deterministic)
}
func (m *CreateScheduleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateScheduleRequest.Merge(m, src)
}
func (m *CreateScheduleRequest) XXX_Size() int {
	return xxx_messageInfo_CreateScheduleRequest.Size(m)
}
func (m *CreateScheduleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateScheduleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateScheduleRequest proto.InternalMessageInfo

func (m *CreateScheduleRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreateScheduleRequest) GetDeadline() string {
	if m != nil {
		return m.Deadline
	}
	return ""
}

func (m *CreateScheduleRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

// CreateSchedule のレスポンス定義
type CreateScheduleResponse struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Deadline             string   `protobuf:"bytes,3,opt,name=deadline,proto3" json:"deadline,omitempty"`
	Content              string   `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateScheduleResponse) Reset()         { *m = CreateScheduleResponse{} }
func (m *CreateScheduleResponse) String() string { return proto.CompactTextString(m) }
func (*CreateScheduleResponse) ProtoMessage()    {}
func (*CreateScheduleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0fffd387de7519c, []int{1}
}

func (m *CreateScheduleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateScheduleResponse.Unmarshal(m, b)
}
func (m *CreateScheduleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateScheduleResponse.Marshal(b, m, deterministic)
}
func (m *CreateScheduleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateScheduleResponse.Merge(m, src)
}
func (m *CreateScheduleResponse) XXX_Size() int {
	return xxx_messageInfo_CreateScheduleResponse.Size(m)
}
func (m *CreateScheduleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateScheduleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateScheduleResponse proto.InternalMessageInfo

func (m *CreateScheduleResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CreateScheduleResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreateScheduleResponse) GetDeadline() string {
	if m != nil {
		return m.Deadline
	}
	return ""
}

func (m *CreateScheduleResponse) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

// ListSchedule のリクエスト定義
type ListScheduleRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListScheduleRequest) Reset()         { *m = ListScheduleRequest{} }
func (m *ListScheduleRequest) String() string { return proto.CompactTextString(m) }
func (*ListScheduleRequest) ProtoMessage()    {}
func (*ListScheduleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0fffd387de7519c, []int{2}
}

func (m *ListScheduleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListScheduleRequest.Unmarshal(m, b)
}
func (m *ListScheduleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListScheduleRequest.Marshal(b, m, deterministic)
}
func (m *ListScheduleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListScheduleRequest.Merge(m, src)
}
func (m *ListScheduleRequest) XXX_Size() int {
	return xxx_messageInfo_ListScheduleRequest.Size(m)
}
func (m *ListScheduleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListScheduleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListScheduleRequest proto.InternalMessageInfo

// ListSchedule のレスポンス定義
type ListScheduleResponse struct {
	Schedules            []*Schedule `protobuf:"bytes,1,rep,name=schedules,proto3" json:"schedules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListScheduleResponse) Reset()         { *m = ListScheduleResponse{} }
func (m *ListScheduleResponse) String() string { return proto.CompactTextString(m) }
func (*ListScheduleResponse) ProtoMessage()    {}
func (*ListScheduleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0fffd387de7519c, []int{3}
}

func (m *ListScheduleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListScheduleResponse.Unmarshal(m, b)
}
func (m *ListScheduleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListScheduleResponse.Marshal(b, m, deterministic)
}
func (m *ListScheduleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListScheduleResponse.Merge(m, src)
}
func (m *ListScheduleResponse) XXX_Size() int {
	return xxx_messageInfo_ListScheduleResponse.Size(m)
}
func (m *ListScheduleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListScheduleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListScheduleResponse proto.InternalMessageInfo

func (m *ListScheduleResponse) GetSchedules() []*Schedule {
	if m != nil {
		return m.Schedules
	}
	return nil
}

type Schedule struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Deadline             string   `protobuf:"bytes,3,opt,name=deadline,proto3" json:"deadline,omitempty"`
	Content              string   `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Schedule) Reset()         { *m = Schedule{} }
func (m *Schedule) String() string { return proto.CompactTextString(m) }
func (*Schedule) ProtoMessage()    {}
func (*Schedule) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0fffd387de7519c, []int{4}
}

func (m *Schedule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schedule.Unmarshal(m, b)
}
func (m *Schedule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schedule.Marshal(b, m, deterministic)
}
func (m *Schedule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schedule.Merge(m, src)
}
func (m *Schedule) XXX_Size() int {
	return xxx_messageInfo_Schedule.Size(m)
}
func (m *Schedule) XXX_DiscardUnknown() {
	xxx_messageInfo_Schedule.DiscardUnknown(m)
}

var xxx_messageInfo_Schedule proto.InternalMessageInfo

func (m *Schedule) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Schedule) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Schedule) GetDeadline() string {
	if m != nil {
		return m.Deadline
	}
	return ""
}

func (m *Schedule) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateScheduleRequest)(nil), "schedule.CreateScheduleRequest")
	proto.RegisterType((*CreateScheduleResponse)(nil), "schedule.CreateScheduleResponse")
	proto.RegisterType((*ListScheduleRequest)(nil), "schedule.ListScheduleRequest")
	proto.RegisterType((*ListScheduleResponse)(nil), "schedule.ListScheduleResponse")
	proto.RegisterType((*Schedule)(nil), "schedule.Schedule")
}

func init() {
	proto.RegisterFile("workspace/jiken-reminder/proto/schedule.proto", fileDescriptor_e0fffd387de7519c)
}

var fileDescriptor_e0fffd387de7519c = []byte{
	// 281 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x92, 0x41, 0x4e, 0xc3, 0x30,
	0x10, 0x45, 0x49, 0x52, 0x20, 0x1d, 0x50, 0x91, 0x86, 0x16, 0x45, 0x91, 0x80, 0x28, 0xab, 0x6e,
	0xda, 0xa0, 0x72, 0x04, 0x36, 0x2c, 0x90, 0x90, 0x52, 0x71, 0x80, 0x10, 0x0f, 0xc2, 0x34, 0xd8,
	0xc1, 0x76, 0xe1, 0x6c, 0xdc, 0x0e, 0xc9, 0xad, 0x13, 0x52, 0x35, 0xcb, 0x2e, 0xff, 0xcc, 0xb7,
	0xdf, 0xcc, 0xb7, 0x61, 0xf6, 0x23, 0xd5, 0x4a, 0xd7, 0x45, 0x49, 0xd9, 0x07, 0x5f, 0x91, 0x98,
	0x29, 0xfa, 0xe4, 0x82, 0x91, 0xca, 0x6a, 0x25, 0x8d, 0xcc, 0x74, 0xf9, 0x4e, 0x6c, 0x5d, 0xd1,
	0xdc, 0x4a, 0x0c, 0x9d, 0x4e, 0x4b, 0x98, 0x3c, 0x28, 0x2a, 0x0c, 0x2d, 0xb7, 0x95, 0x9c, 0xbe,
	0xd6, 0xa4, 0x0d, 0x8e, 0xe1, 0xd8, 0x70, 0x53, 0x51, 0xe4, 0x25, 0xde, 0x74, 0x98, 0x6f, 0x04,
	0xc6, 0x10, 0x32, 0x2a, 0x58, 0xc5, 0x05, 0x45, 0xbe, 0x6d, 0x34, 0x1a, 0x23, 0x38, 0x2d, 0xa5,
	0x30, 0x24, 0x4c, 0x14, 0xd8, 0x96, 0x93, 0xa9, 0x81, 0xab, 0x5d, 0x88, 0xae, 0xa5, 0xd0, 0x84,
	0x23, 0xf0, 0x39, 0xb3, 0x88, 0x41, 0xee, 0x73, 0xd6, 0x52, 0xfd, 0x3e, 0x6a, 0xd0, 0x4f, 0x1d,
	0x74, 0xa9, 0x13, 0xb8, 0x7c, 0xe2, 0xda, 0xec, 0x2c, 0x96, 0x3e, 0xc2, 0xb8, 0x5b, 0xde, 0x8e,
	0x72, 0x07, 0x43, 0x97, 0x8a, 0x8e, 0xbc, 0x24, 0x98, 0x9e, 0x2d, 0x70, 0xde, 0xe4, 0xd6, 0xd8,
	0x5b, 0x53, 0xfa, 0x06, 0xa1, 0x2b, 0x1f, 0x72, 0x91, 0xc5, 0xaf, 0x07, 0x17, 0x0e, 0xb4, 0x24,
	0xf5, 0xcd, 0x4b, 0xc2, 0x17, 0x18, 0x75, 0x23, 0xc5, 0xdb, 0x76, 0xd8, 0xbd, 0x2f, 0x1a, 0x27,
	0xfd, 0x86, 0x4d, 0x04, 0xe9, 0x11, 0x3e, 0xc3, 0xf9, 0xff, 0x70, 0xf0, 0xba, 0x3d, 0xb3, 0x27,
	0xcb, 0xf8, 0xa6, 0xaf, 0xed, 0x2e, 0x7c, 0x3d, 0xb1, 0x1f, 0xee, 0xfe, 0x2f, 0x00, 0x00, 0xff,
	0xff, 0x54, 0x67, 0x29, 0xe7, 0xa1, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ScheduleServiceClient is the client API for ScheduleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ScheduleServiceClient interface {
	CreateSchedule(ctx context.Context, in *CreateScheduleRequest, opts ...grpc.CallOption) (*CreateScheduleResponse, error)
	ListSchedule(ctx context.Context, in *ListScheduleRequest, opts ...grpc.CallOption) (*ListScheduleResponse, error)
}

type scheduleServiceClient struct {
	cc *grpc.ClientConn
}

func NewScheduleServiceClient(cc *grpc.ClientConn) ScheduleServiceClient {
	return &scheduleServiceClient{cc}
}

func (c *scheduleServiceClient) CreateSchedule(ctx context.Context, in *CreateScheduleRequest, opts ...grpc.CallOption) (*CreateScheduleResponse, error) {
	out := new(CreateScheduleResponse)
	err := c.cc.Invoke(ctx, "/schedule.ScheduleService/CreateSchedule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scheduleServiceClient) ListSchedule(ctx context.Context, in *ListScheduleRequest, opts ...grpc.CallOption) (*ListScheduleResponse, error) {
	out := new(ListScheduleResponse)
	err := c.cc.Invoke(ctx, "/schedule.ScheduleService/ListSchedule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScheduleServiceServer is the server API for ScheduleService service.
type ScheduleServiceServer interface {
	CreateSchedule(context.Context, *CreateScheduleRequest) (*CreateScheduleResponse, error)
	ListSchedule(context.Context, *ListScheduleRequest) (*ListScheduleResponse, error)
}

func RegisterScheduleServiceServer(s *grpc.Server, srv ScheduleServiceServer) {
	s.RegisterService(&_ScheduleService_serviceDesc, srv)
}

func _ScheduleService_CreateSchedule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateScheduleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServiceServer).CreateSchedule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedule.ScheduleService/CreateSchedule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServiceServer).CreateSchedule(ctx, req.(*CreateScheduleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScheduleService_ListSchedule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListScheduleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServiceServer).ListSchedule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedule.ScheduleService/ListSchedule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServiceServer).ListSchedule(ctx, req.(*ListScheduleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ScheduleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "schedule.ScheduleService",
	HandlerType: (*ScheduleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSchedule",
			Handler:    _ScheduleService_CreateSchedule_Handler,
		},
		{
			MethodName: "ListSchedule",
			Handler:    _ScheduleService_ListSchedule_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "workspace/jiken-reminder/proto/schedule.proto",
}
